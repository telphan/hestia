#!/usr/bin/env zsh

set -e

# JS field injection code from https://github.com/qutebrowser/qutebrowser/blob/master/misc/userscripts/password_fill
javascript_escape() {
    # print the first argument in an escaped way, such that it can safely
    # be used within javascripts double quotes
    # shellcheck disable=SC2001
    sed "s,[\\\\'\"],\\\\&,g" <<< "$1"
}

js() {
cat <<EOF
    function isVisible(elem) {
        var style = elem.ownerDocument.defaultView.getComputedStyle(elem, null);
        if (style.getPropertyValue("visibility") !== "visible" ||
            style.getPropertyValue("display") === "none" ||
            style.getPropertyValue("opacity") === "0") {
            return false;
        }
        return elem.offsetWidth > 0 && elem.offsetHeight > 0;
    };
    function hasPasswordField(form) {
        var inputs = form.getElementsByTagName("input");
        for (var j = 0; j < inputs.length; j++) {
            var input = inputs[j];
            if (input.type == "password") {
                return true;
            }
        }
        return false;
    };
    function loadData2Form (form) {
        var inputs = form.getElementsByTagName("input");
        for (var j = 0; j < inputs.length; j++) {
            var input = inputs[j];
            if (isVisible(input) && (input.type == "text" || input.type == "email")) {
                input.focus();
                input.value = "$(javascript_escape "${USERNAME}")";
                input.dispatchEvent(new Event('change'));
                input.blur();
            }
            if (input.type == "password") {
                input.focus();
                input.value = "$(javascript_escape "${PASSWORD}")";
                input.dispatchEvent(new Event('change'));
                input.blur();
            }
        }
    };
    var forms = document.getElementsByTagName("form");
    for (i = 0; i < forms.length; i++) {
        if (hasPasswordField(forms[i])) {
            loadData2Form(forms[i]);
        }
    }
EOF
}

SEARCH="."
ACCOUNT="my"

if [ -n "$1" ]; then
  SEARCH=".*${1}.*"

  if [ -n "$2" ]; then
    ACCOUNT="$2"
  fi
fi

URL=$(echo "$QUTE_URL" | awk -F/ '{print $3}' | sed 's/www.//g')
echo "message-info 'Looking for password for $URL...'" >> $QUTE_FIFO

TOKEN=$(echo -n $(security find-generic-password -s "1Password-$ACCOUNT" -w) | op signin ${ACCOUNT} --output=raw)
UUID_URL=$(op list items --session="$TOKEN" | jq -r '.[] | "\(.overview.ainfo):\(.uuid):\(.overview.url)"' | grep "$URL" | grep -E "$SEARCH" | head) || $(echo "message-error 'No entry found for $URL'" >> $QUTE_FIFO)

UUID=$(echo "$UUID_URL" | cut -d ":" -f 2)
ITEM=$(op get item --session="$TOKEN" "$UUID")
PASSWORD=$(jq -r '.details.fields | .[] | select(.designation=="password") | .value'<<<${ITEM})

if [ -n "$PASSWORD" ]; then
  TITLE=$(jq -r '.overview.title'<<<${ITEM})
  USERNAME=$(jq -r '.details.fields | .[] | select(.designation=="username") | .value'<<<${ITEM})

  printjs() {
      js | sed 's,//.*$,,' | tr '\n' ' '
  }
  echo "jseval -q $(printjs)" >> "$QUTE_FIFO"

  TOTP=$(echo "$ITEM" | op get totp --session="$TOKEN" "$UUID")
  if [ -n "$TOTP" ]; then
    echo "$TOTP" | pbcopy
    echo "One time password for $TITLE: $TOTP in clipboard" | terminal-notifier -title "Qutebrowser 1Password" -sound default
  fi
else
  echo "No password found for $URL" | terminal-notifier -title "Qutebrowser 1Password" -sound default
fi
